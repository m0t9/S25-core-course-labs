name: Python app workflow

on:
  pull_request:
    paths:
    - 'app_python/**'
    - '.github/workflows/app_python.yml'

jobs:
  format:
    name: Run black formatter
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: psf/black@stable
        with:
          options: "--check --diff"
          src: "./app_python"

  lint:
    name: Run pylint
    defaults:
      run:
        working-directory: app_python
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install Pylint
      run: pip install pylint

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Pylint
      run: pylint --rcfile=.pylintrc .

  test:
    defaults:
      run:
        working-directory: app_python
    name: Run pytest
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install httpx
          pip install -r requirements.txt

      - name: Test with pytest
        run: pytest .

  security-check:
    runs-on: ubuntu-22.04
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.10@master
        with:
          args: --skip-unresolved app_python/
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker-push:
    defaults:
      run:
        working-directory: app_python
    needs: [lint, test, security-check]
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          platforms: linux/amd64,linux/arm64,linux/arm/v7

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:app_python"
          push: true
          tags: "${{ secrets.DOCKER_USERNAME }}/pyapp:latest"
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/pyapp:latest
          cache-to: type=inline
